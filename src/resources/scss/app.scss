/*
 * Basic
 */
#app {
  font-family: 'Avenir', Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}

h1, h2 {
  font-weight: normal;
}

p {
  margin: 0;
}

ul {
  list-style-type: none;
  padding: 0;
}

li {
  display: inline-block;
  margin: 0 10px;
}

a {
  color: #42b983;
}

label input[type="checkbox"] {
  margin-right: 5px;
}



/*
 * Collapsible panel & related animations
 */
$collapsedHeight: 60px;
$collapseDuration: 1s;
$collapseTransition: all $collapseDuration linear;
.panelCollapsible {
  border: 1px solid #ddd;
  border-radius: 4px;
  padding: 20px;
  position: relative;

  .collapseTrigger {
    height: 10px;
    width: 10px;
    background-color: transparent;
    border: 1px solid black;
    position: absolute;
    top: 10px;
    right: 10px;
    transform: rotate(45deg);
    transition: $collapseTransition;

    &.collapsed {
      transition: $collapseTransition;
      background-color: black;
      transform: rotate(-45deg);
    }
  }

  &.collapsed {
    transition: $collapseTransition;
    height: $collapsedHeight;
    overflow-y: hidden;
  }

  &.open {
    transition: $collapseTransition;
    height: 90px;
  }
}

@keyframes slide-down {
  0% {
    opacity: 0;
    transform: translateY($collapsedHeight * -.5);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.slide-enter-active {
  animation: slide-down $collapseDuration;
}

.slide-leave-active {
  animation: slide-down $collapseDuration reverse;
}



/*
 * Estimate panel
 */

.totalPanel {
  .panelHeader {
    text-align: left;
  }
}



/*
 * Builder panel cake demo
 */
.finalProductWrapper {
  padding: 20px 70px;

  .cakeLayer {
    $frosting-width: 20px;
    $frosting-height: $frosting-width * .6;
    $cake-height: 90px;
    $filling-height: 10px;

    padding-top: $frosting-height;
    padding-left: $frosting-width;
    padding-right: $frosting-width;
    padding-bottom: 0;
    height: $frosting-height + $cake-height + $filling-height;
    width: 100%;

    .filling {
      height: $filling-height;
    }

    .layerInner {
      height: $cake-height;
      width: 100%;
    }
  }
}
